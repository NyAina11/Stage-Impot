name: CI - Test Stage-Impot

on:
  push:
    branches: [ main, BD ]
  pull_request:
    branches: [ main, BD ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: stage_impot_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install backend dependencies
        run: |
          cd backend
          npm ci

      - name: Wait for Postgres to be up
        run: |
          for i in {1..10}; do
            nc -z localhost 5432 && echo "Postgres up" && break
            echo "Waiting for postgres..."
            sleep 3
          done

      - name: Run backend tests
        env:
          DATABASE_URL: "postgres://testuser:testpassword@localhost:5432/stage_impot_test"
        run: |
          cd backend
          npm test

      - name: Build backend Docker image
        run: |
          docker build -t stage-impot-backend:ci-test ./backend

  frontend-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Lint frontend
        run: |
          cd frontend
          npm run lint || echo "No linter configured"

      - name: Run frontend tests (si gérés)
        run: |
          cd frontend
          npm test || echo "No tests configured"

      - name: Build frontend (React)
        run: |
          cd frontend
          npm run build

      - name: Build frontend Docker image (Nginx)
        run: |
          docker build -t stage-impot-frontend:ci-test ./frontend

  docker-compose-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Docker Compose Build (all services)
        run: |
          docker compose -f docker-compose.yml build
